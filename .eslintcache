[{"C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\index.js":"1","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\App.js":"2","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\reportWebVitals.js":"3","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\views\\ZipView.js":"4","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\views\\DistrictView.js":"5","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\views\\CityView.js":"6","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\home\\Home.js":"7","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\setUp\\dataSetUp.js":"8","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\header\\Header.js":"9","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\home\\Grid.js":"10","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\header\\Search.js":"11","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\views\\Table.js":"12","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\home\\InfoView.js":"13","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\home\\TableByCity.js":"14","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\home\\TableByCitySide.js":"15","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\home\\RegionHistoryGraph.js":"16","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\setUp\\PXWeb\\getData.js":"17","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\setUp\\PXWeb\\parseResponse.js":"18","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\setUp\\PXWeb\\api\\api.js":"19","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\setUp\\PXWeb\\api\\apiGET.js":"20","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\graphs\\nivo\\Line.js":"21"},{"size":569,"mtime":1610885355782,"results":"22","hashOfConfig":"23"},{"size":2005,"mtime":1613328582804,"results":"24","hashOfConfig":"23"},{"size":375,"mtime":1610352796710,"results":"25","hashOfConfig":"23"},{"size":4156,"mtime":1613328912090,"results":"26","hashOfConfig":"23"},{"size":2203,"mtime":1611151800238,"results":"27","hashOfConfig":"23"},{"size":5051,"mtime":1613331161562,"results":"28","hashOfConfig":"23"},{"size":6818,"mtime":1613315513461,"results":"29","hashOfConfig":"23"},{"size":15604,"mtime":1613329922513,"results":"30","hashOfConfig":"23"},{"size":5125,"mtime":1611225158236,"results":"31","hashOfConfig":"23"},{"size":1625,"mtime":1613122163121,"results":"32","hashOfConfig":"23"},{"size":1130,"mtime":1611066906595,"results":"33","hashOfConfig":"23"},{"size":10976,"mtime":1611151800240,"results":"34","hashOfConfig":"23"},{"size":4515,"mtime":1613332765069,"results":"35","hashOfConfig":"23"},{"size":7492,"mtime":1611336662780,"results":"36","hashOfConfig":"23"},{"size":1565,"mtime":1611332169781,"results":"37","hashOfConfig":"23"},{"size":9878,"mtime":1613315218735,"results":"38","hashOfConfig":"23"},{"size":3746,"mtime":1613323536007,"results":"39","hashOfConfig":"23"},{"size":7742,"mtime":1611695730898,"results":"40","hashOfConfig":"23"},{"size":2802,"mtime":1613316665334,"results":"41","hashOfConfig":"23"},{"size":1400,"mtime":1613119956321,"results":"42","hashOfConfig":"23"},{"size":4279,"mtime":1613328346879,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"he8xts",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\index.js",[],["95","96"],"C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\App.js",[],"C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\reportWebVitals.js",[],"C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\views\\ZipView.js",["97","98"],"import { useParams } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Grid from \"../home/Grid\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport getData from \"./../../setUp/dataSetUp\";\r\nimport Table from \"./Table\";\r\nimport Line from \"../graphs/nivo/Line\";\r\nimport pxwebGetData from \"../../setUp/PXWeb/getData\";\r\n\r\nexport default function ZipView(props) {\r\n  let { zip } = useParams();\r\n\r\n  let Sales = [];\r\n  try {\r\n    Sales = findZipData(props.zipData, zip).data;\r\n  } catch (error) {}\r\n\r\n  const [summaryByRooms, setsummaryByRooms] = useState([]);\r\n  const [apartmentInfoActive, setApartmentInfoActive] = useState(\"Kaikki\");\r\n\r\n  const [lineData, setLineData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const years = [\r\n        2010,\r\n        2011,\r\n        2012,\r\n        2013,\r\n        2014,\r\n        2015,\r\n        2016,\r\n        2017,\r\n        2018,\r\n        2019,\r\n        2020,\r\n      ];\r\n      let params = { zips: [zip], years: years };\r\n\r\n      let res = await pxwebGetData(\"byZip\", params);\r\n      console.log(res);\r\n      console.log(\"pxwebGetData_summaryByZip\");\r\n\r\n      let data = [];\r\n\r\n      let zipItems = Object.keys(res);\r\n      for (const key in zipItems) {\r\n        let dataObject = { id: zipItems[key] };\r\n        let objData = [];\r\n\r\n        console.log(zipItems[key]);\r\n        console.log(\"DATALEMENT__\");\r\n        let dataElement =\r\n          res[zipItems[key]][\"Talotyypit yhteensä\"][\"Rakennusvuodet yhteensä\"];\r\n        let elementKeys = Object.keys(dataElement);\r\n\r\n        for (const year in elementKeys) {\r\n          objData.push({\r\n            x: elementKeys[year],\r\n            y:\r\n              res[zipItems[key]][\"Talotyypit yhteensä\"][\r\n                \"Rakennusvuodet yhteensä\"\r\n              ][elementKeys[year]][\"Neliöhinta (EUR/m2)\"],\r\n          });\r\n        }\r\n\r\n        //dataObject[\"id\"] = zip;\r\n        dataObject[\"data\"] = objData;\r\n        data.push(dataObject);\r\n        break;\r\n      }\r\n\r\n      data.sort(\r\n        (a, b) =>\r\n          a[\"data\"][a[\"data\"].length - 1].y - b[\"data\"][b[\"data\"].length - 1].y\r\n      );\r\n\r\n      console.log(data);\r\n      console.log(\"DATA_RES_zip\");\r\n      setLineData(data);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  /* return (\r\n    <div>\r\n      <h1 style={{ padding: \"50px\" }}>{zip}</h1>\r\n      <div>\r\n        <h2> Neliöhinnat 2010-2020</h2>\r\n        <div style={{ height: \"450px\", marginBottom: \"100px\" }}>\r\n          <Line data={lineData} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ); */\r\n\r\n  const onClickHandler = (e) => {\r\n    setApartmentInfoActive(e.target.id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData(\"summaryByRooms\", { sales: Sales }).then((summaries) => {\r\n      setsummaryByRooms(summaries);\r\n    });\r\n  }, []);\r\n\r\n  // Haetaan listalta oikean postinumeron tiedot\r\n  function findZipData(array, value) {\r\n    return array.find((element) => {\r\n      return element.place === value;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ padding: \"50px\" }}>Postinumero: {zip}</h1>\r\n      <div>\r\n        <h1 style={{ padding: \"50px\" }}>{zip}</h1>\r\n        <div>\r\n          <h2> Neliöhinnat 2010-2020</h2>\r\n          <div style={{ height: \"450px\", marginBottom: \"100px\" }}>\r\n            <Line data={lineData} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex-container\">\r\n        <div style={{ width: \"100%\" }}>\r\n          <h5>Tilastoja huonekohtaisesti</h5>\r\n          <Grid data={summaryByRooms} width=\"100%\" onClick={onClickHandler} />\r\n          <div\r\n            style={{\r\n              height: \"50px\",\r\n              alignContent: \"center\",\r\n              verticalAlign: \"center\",\r\n            }}\r\n          ></div>\r\n\r\n          <div style={{ width: \"100%\" }}>\r\n            <h5>{apartmentInfoActive}</h5>\r\n            <Table sales={Sales} room={apartmentInfoActive} />\r\n          </div>\r\n          <div\r\n            style={{\r\n              height: \"100px\",\r\n              alignContent: \"center\",\r\n              verticalAlign: \"center\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\views\\DistrictView.js",["99"],"import { useParams } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Grid from \"../home/Grid\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport getData from \"./../../setUp/dataSetUp\";\r\nimport Table from \"./Table\";\r\n\r\nexport default function DistrictView(props) {\r\n  let { district } = useParams();\r\n  let Sales = findDistrictData(props.cityData, district);\r\n\r\n\r\n  const [summaryByRooms, setsummaryByRooms] = useState([]);\r\n  const [apartmentInfoActive, setApartmentInfoActive] = useState(\"Kaikki\");\r\n\r\n  const onClickHandler = (e) => {\r\n    setApartmentInfoActive(e.target.id);\r\n  };\r\n\r\n  useEffect(() => {      \r\n    getData(\"summaryByRooms\", { sales: Sales }).then((summaries) => {\r\n        setsummaryByRooms(summaries);\r\n    })\r\n\r\n  }, []);\r\n\r\n  // Haetaan listalta oikean kaupunginosan tiedot\r\n  // Huom: Ei erottele kaupunkine välillä!\r\n  function findDistrictData(array, value) {\r\n    let returnValue = [];\r\n\r\n    for (let i in array){\r\n      for(let j in array[i].data){\r\n        if (array[i].data[j].kaupunginosa === value) {\r\n          returnValue.push(array[i].data[j]);\r\n        }\r\n      }\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ padding: \"50px\" }}>{district}</h1>\r\n      <div className=\"flex-container\">\r\n        <div style={{ width: \"100%\" }}>\r\n            <h5>Tilastoja huonekohtaisesti</h5>\r\n            <Grid\r\n                data={summaryByRooms}\r\n                width=\"100%\"\r\n                onClick={onClickHandler}\r\n            />\r\n            <div\r\n              style={{\r\n                height: \"50px\",\r\n                alignContent: \"center\",\r\n                verticalAlign: \"center\",\r\n              }}\r\n            >\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\" }}>\r\n                <h5>{apartmentInfoActive}</h5>\r\n                <Table sales={Sales} room={apartmentInfoActive} />\r\n            </div>\r\n            <div\r\n              style={{\r\n                height: \"100px\",\r\n                alignContent: \"center\",\r\n                verticalAlign: \"center\",\r\n              }}\r\n            >\r\n            </div>\r\n        </div>\r\n      </div>      \r\n    </div>\r\n  );\r\n}","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\views\\CityView.js",["100","101"],"C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\home\\Home.js",["102","103","104","105"],"C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\setUp\\dataSetUp.js",["106"],"C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\header\\Header.js",["107","108"],"import Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Search from \"./Search\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Header() {\r\n  let history = useHistory();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [searchFormActive, setSearchFormActive] = useState(false);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [searching, setSearching] = useState(false);\r\n  const [showAllResults, setShowAllResults] = useState(false);\r\n\r\n  const handleSearchForm = (e) => {\r\n    try {\r\n      setSearchValue(e.target.value);\r\n      setSearching(true);\r\n    } catch (error) {\r\n      setSearchValue(\"\");\r\n      setSearching(false);\r\n    }\r\n  };\r\n\r\n  // On blurring search field close the result list\r\n  const handleSearchFormBlur = (e) => {\r\n    try {\r\n      // If user clicked \"Näytä lisää\" /\"Näytä vähemmän\" ->update search result list\r\n      if (e.relatedTarget.id === \"showAllSearchResultsToggle\") {\r\n        setShowAllResults((state) => !state);\r\n        document.getElementById(\"searchFormControl\").focus();\r\n        return;\r\n      }\r\n    } catch (error) {}\r\n\r\n    let idString = [\"init\"];\r\n\r\n    try {\r\n      let id = e.relatedTarget.id;\r\n      idString = id.split(\":\");\r\n    } catch (error) {}\r\n\r\n    setSearchFormActive(false);\r\n    setSearchValue(\"\");\r\n    setShowAllResults(false);\r\n\r\n    if (idString[0] === \"headerLink\") {\r\n      history.push(idString[1]);\r\n    }\r\n  };\r\n\r\n  const handleSearchFormClick = (e) => {\r\n    setSearchFormActive(true);\r\n  };\r\n\r\n  const getSearchResultListing = (showAll) => {\r\n    let keys = Object.keys(searchResults);\r\n    let resArr = [];\r\n\r\n    let limit = 9;\r\n\r\n    let index = 0;\r\n    for (const key in keys) {\r\n      for (const result in searchResults[keys[key]]) {\r\n        if (result > limit && showAll === false) {\r\n          resArr.push(\r\n            <ListGroup.Item\r\n              key={\"searchResult-show-more\"}\r\n              id={\"showAllSearchResultsToggle\"}\r\n              as={Link}\r\n              to={\"\"}\r\n            >\r\n              Näytä lisää..\r\n            </ListGroup.Item>\r\n          );\r\n          return resArr;\r\n        }\r\n\r\n        resArr.push(\r\n          <ListGroup.Item\r\n            as={Link}\r\n            id={`headerLink:/${keys[key].toLowerCase()}/${\r\n              searchResults[keys[key]][result]\r\n            }`}\r\n            to={`/${keys[key].toLowerCase()}/${\r\n              searchResults[keys[key]][result]\r\n            }`}\r\n            key={\"searchResult-\" + result}\r\n          >\r\n            {keys[key] + \" : \" + searchResults[keys[key]][result]}\r\n          </ListGroup.Item>\r\n        );\r\n      }\r\n\r\n      index = index + 1;\r\n    }\r\n    if (resArr.length > 10) {\r\n      resArr.push(\r\n        <ListGroup.Item\r\n          key={\"searchResult-show-more\"}\r\n          id={\"showAllSearchResultsToggle\"}\r\n          as={Link}\r\n          to={\"\"}\r\n        >\r\n          Näytä vähemmän..\r\n        </ListGroup.Item>\r\n      );\r\n    }\r\n\r\n    return resArr;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand as={Link} to=\"/\">\r\n          Kauppahinnat.fi\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <div style={{ marginLeft: \"10px\" }}>\r\n            <Form inline>\r\n              <FormControl\r\n                onChange={handleSearchForm}\r\n                type=\"text\"\r\n                placeholder=\"Etsi kaupunki tai postinumero...\"\r\n                className=\"mr-sm-2\"\r\n                value={searchValue}\r\n                onBlur={handleSearchFormBlur}\r\n                onClick={handleSearchFormClick}\r\n                id=\"searchFormControl\"\r\n              />\r\n\r\n              <Search\r\n                searchValue={searchValue}\r\n                setSearchResults={setSearchResults}\r\n                setSearching={setSearching}\r\n              />\r\n            </Form>\r\n\r\n            {searchFormActive && searching && (\r\n              <ListGroup id=\"searchResultList\">\r\n                {searching === true ? (\r\n                  <ListGroup.Item key={\"searchResult-searching\"}>\r\n                    Hakee\r\n                  </ListGroup.Item>\r\n                ) : null}\r\n              </ListGroup>\r\n            )}\r\n\r\n            {searchFormActive && !searching && (\r\n              <ListGroup id=\"searchResultList\">\r\n                {searchResults == null ? (\r\n                  <ListGroup.Item key={\"searchResult-none\"}>\r\n                    Ei tuloksia\r\n                  </ListGroup.Item>\r\n                ) : (\r\n                  getSearchResultListing(showAllResults).map((e) => e)\r\n                )}\r\n              </ListGroup>\r\n            )}\r\n          </div>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\home\\Grid.js",[],"C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\header\\Search.js",["109"],"import { useEffect } from \"react\";\r\nimport zipCodeStructure from \"../../assets/data/zipCodeStructure.json\";\r\n\r\nexport default function Search({\r\n  searchValue,\r\n  setSearchResults,\r\n  setSearching,\r\n}) {\r\n  useEffect(() => {\r\n    if (searchValue === \"\") {\r\n      setSearchResults([]);\r\n      setSearching(false);\r\n      return null;\r\n    }\r\n\r\n    let matchesCity = zipCodeStructure.data.filter((e) =>\r\n      e.kaupunki.toLowerCase().includes(searchValue.toLowerCase())\r\n    );\r\n\r\n    let cities = [];\r\n    for (const city in matchesCity) {\r\n      cities.push(matchesCity[city].kaupunki);\r\n    }\r\n    cities = [...new Set(cities)];\r\n\r\n    let matchesZip = zipCodeStructure.data.filter((e) =>\r\n      e.postinumero.includes(searchValue)\r\n    );\r\n\r\n    let zips = [];\r\n    for (const zip in matchesZip) {\r\n      zips.push(matchesZip[zip].postinumero);\r\n    }\r\n    zips = [...new Set(zips)];\r\n\r\n    if (cities.length === 0 && zips.length === 0) {\r\n      setSearchResults(null);\r\n    } else {\r\n      setSearchResults({ Kaupunki: cities, Postinumero: zips });\r\n    }\r\n    setSearching(false);\r\n  }, [searchValue]);\r\n\r\n  return null;\r\n}\r\n","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\views\\Table.js",["110"],"import { useTable, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table'\r\nimport React, { useState, useEffect } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n  // Vilkuiltu täältä mallia: https://www.freakyjolly.com/react-table-tutorial/\r\n  export default function Table(props) {\r\n    const [data, setData] = useState(props.sales);\r\n    \r\n    // Vakikolumnit kauppatiedoille\r\n    const columns = React.useMemo(\r\n        () => [\r\n            // {\r\n            //     Header: 'Kaupunki',\r\n            //     accessor: 'kaupunki',\r\n            // },\r\n            {\r\n                Header: 'Kaupunginosa',\r\n                accessor: 'kaupunginosa',\r\n            },\r\n            // {\r\n            //     Header: 'Postinumero',\r\n            //     accessor: 'postinumero',\r\n            // },\r\n            // {\r\n            //     Header: 'Huonelukumäärä',\r\n            //     accessor: 'huoneLukumaara',\r\n            //     Filter: SelectColumnFilter,\r\n            //     filter: 'equals'\r\n            // },\r\n            {\r\n                Header: 'Huoneisto',\r\n                accessor: 'huoneisto',\r\n            },\r\n            {\r\n                Header: 'Talotyyppi',\r\n                accessor: 'talotyyppi',\r\n                Filter: SelectColumnFilter,\r\n                filter: 'equals',\r\n            },\r\n            {\r\n                Header: 'Pinta-ala',\r\n                accessor: 'pintaAla',\r\n                // Rangefiltteri ei toimi tässä, koska Suomilocale floateille on pilkku eikä piste.\r\n                // JavaScript ei osaa tehdä käännöstä oikein, enkä tähän väliin ehdi asiaa selvitellä.\r\n                // Filter: NumberRangeColumnFilter,\r\n                // filter: 'between',\r\n                Filter: SelectColumnFilter,\r\n                filter: 'equals',\r\n            },\r\n            {\r\n                Header: 'Velaton hinta',\r\n                accessor: 'velatonHinta',\r\n                Filter: NumberRangeColumnFilter,\r\n                filter: 'between',\r\n            },\r\n            {\r\n                Header: 'Hinta per neliö',\r\n                accessor: 'hintaPerNelio',\r\n                Filter: NumberRangeColumnFilter,\r\n                filter: 'between',\r\n            },\r\n            {\r\n                Header: 'Rakennusvuosi',\r\n                accessor: 'rakennusvuosi',\r\n                Filter: NumberRangeColumnFilter,\r\n                filter: 'between',\r\n            },\r\n            {\r\n                Header: 'Kerros',\r\n                accessor: 'kerros',\r\n                Filter: SelectColumnFilter,\r\n                filter: 'equals',\r\n            },\r\n            {\r\n                Header: 'Hissi',\r\n                accessor: 'hissi',\r\n                Filter: SelectColumnFilter,\r\n                filter: 'equals',\r\n            },\r\n            {\r\n                Header: 'Kunto',\r\n                accessor: 'kunto',\r\n                Filter: SelectColumnFilter,\r\n                filter: 'equals',\r\n            },\r\n            {\r\n                Header: 'Tontti',\r\n                accessor: 'tontti',\r\n                Filter: SelectColumnFilter,\r\n                filter: 'equals',\r\n            },\r\n            {\r\n                Header: 'Energialuokka',\r\n                accessor: 'energialuokka',\r\n                Filter: SelectColumnFilter,\r\n                filter: 'equals',\r\n            }\r\n        ], []\r\n    )\r\n\r\n    const filterTypes = React.useMemo(\r\n        () => ({\r\n            text: (rows, id, filterValue) => {\r\n                return rows.filter(row => {\r\n                const rowValue = row.values[id]\r\n                return rowValue !== undefined\r\n                    ? String(rowValue)\r\n                        .split(',')[0]\r\n                        .toLowerCase()\r\n                        .startsWith(String(filterValue).toLowerCase())\r\n                    : true\r\n                })\r\n            },\r\n        }),\r\n        []\r\n      )\r\n\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Vakiofiltteri kentille\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n      )\r\n  \r\n    const { \r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        state,\r\n        visibleColumns,\r\n        preGlobalFilteredRows,\r\n        setGlobalFilter, \r\n    } = useTable({\r\n            columns,\r\n            data,\r\n            defaultColumn,\r\n            filterTypes, \r\n    },\r\n    useFilters,\r\n    useGlobalFilter,\r\n    );\r\n\r\n    useEffect(() => {\r\n        let roomInfo = \"Kaikki\";\r\n        let salesData = [];\r\n\r\n        // Tee asuntokoon filtteröintiparametri\r\n        if(props.room === \"Yksiöt\"){\r\n            roomInfo = \"1\";\r\n        }\r\n        else if(props.room === \"Kaksiot\"){\r\n            roomInfo = \"2\";\r\n        }\r\n        else if(props.room === \"Kolmiot\"){\r\n            roomInfo = \"3\";\r\n        }\r\n        else if(props.room === \"4+ huonetta\"){\r\n            roomInfo = \"4+\";\r\n        }\r\n        \r\n        // Filtteröi parametrin mukaan dataa\r\n        if (roomInfo === \"Kaikki\"){\r\n            salesData = props.sales;\r\n        }\r\n        else{\r\n            salesData = props.sales.filter(\r\n                (e) => e.huoneLukumaaraV2 === roomInfo);\r\n        }\r\n        \r\n        setData(salesData);\r\n    }, [props.room]);\r\n\r\n    /********** FILTTERIT ***********/\r\n    // https://codesandbox.io/s/github/tannerlinsley/react-table/tree/master/examples/filtering?file=/src/App.js:6247-6319\r\n\r\n    // Vakiofiltteri taulukolle\r\n    function GlobalFilter({\r\n        preGlobalFilteredRows,\r\n        globalFilter,\r\n        setGlobalFilter,\r\n    }) {\r\n        const count = preGlobalFilteredRows.length\r\n        const [value, setValue] = React.useState(globalFilter)\r\n        const onChange = useAsyncDebounce(value => {\r\n          setGlobalFilter(value || undefined)\r\n        }, 200)\r\n      \r\n        return (\r\n          <span>\r\n            Hae:{' '}\r\n            <input\r\n              value={value || \"\"}\r\n              onChange={e => {\r\n                setValue(e.target.value);\r\n                onChange(e.target.value);\r\n              }}\r\n              placeholder={`${count} asuntokaupasta...`}\r\n              style={{\r\n                fontSize: '1rem',\r\n                border: '0',\r\n              }}\r\n            />\r\n          </span>\r\n        )\r\n    }\r\n\r\n    // Vakiofiltterin määritys\r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        return (\r\n            <input\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Hae...`}\r\n            />\r\n        )\r\n    }\r\n\r\n    // Dropdown-filtteri columnin arvoille; toimii dynaamisesti\r\n    function SelectColumnFilter({\r\n        column: { filterValue, setFilter, preFilteredRows, id },\r\n    }) {\r\n        // Selvitetään fiiltteröinnin valintavaihtoehdot preFilteredRows:n avulla\r\n        const options = React.useMemo(() => {\r\n            const options = new Set()\r\n            preFilteredRows.forEach(row => {\r\n                options.add(row.values[id])\r\n            })\r\n\r\n            return [...options.values()]\r\n        }, [id, preFilteredRows])\r\n    \r\n        // Renderöidään monivalinta\r\n        return (\r\n            <select\r\n                value={filterValue}\r\n                onChange={e => {\r\n                setFilter(e.target.value || undefined)\r\n                }}\r\n            >\r\n                <option value=\"\">Kaikki</option>\r\n                {options.map((option, i) => (\r\n                <option key={i} value={option}>\r\n                    {option}\r\n                </option>\r\n                ))}\r\n            </select>\r\n        )\r\n    }\r\n\r\n    // Filtteri, johon asetetaan numeroarvoina lähtöarvo ja päättymisarvo\r\n    function NumberRangeColumnFilter({\r\n        column: { filterValue = [], setFilter },\r\n    }) {\r\n        return (\r\n            <div\r\n                style={{\r\n                display: 'flex',\r\n                }}\r\n            >\r\n            <input\r\n                value={filterValue[0] || ''}\r\n                type=\"number\"\r\n                onChange={e => {\r\n                    const val = e.target.value;\r\n                    setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]])\r\n                }}\r\n                placeholder={`Mistä`}\r\n                style={{\r\n                    width: '65px',\r\n                    marginRight: '0.5rem',\r\n                }}\r\n            />\r\n            -\r\n            <input\r\n                value={filterValue[1] || ''}\r\n                type=\"number\"\r\n                onChange={e => {\r\n                    const val = e.target.value;\r\n                    setFilter((old = []) => [old[0], val ? parseInt(val, 10) : undefined])\r\n                }}\r\n                placeholder={`Mihin`}\r\n                style={{\r\n                    width: '65px',\r\n                    marginLeft: '0.5rem',\r\n                }}\r\n            />\r\n          </div>\r\n        )\r\n    }    \r\n    /********** FILTTERIT PÄÄTTYY ***********/\r\n  \r\n    // Generoidaan taulu lennossa oikean kokoseksi\r\n    return (\r\n        <table className=\"table\" {...getTableProps()}>\r\n            <thead>\r\n                <tr>\r\n                    <th\r\n                    colSpan={visibleColumns.length}\r\n                    style={{\r\n                        textAlign: 'left',\r\n                    }}\r\n                    >\r\n                    <GlobalFilter\r\n                        preGlobalFilteredRows={preGlobalFilteredRows}\r\n                        globalFilter={state.globalFilter}\r\n                        setGlobalFilter={setGlobalFilter}\r\n                    />\r\n                    </th>\r\n                </tr>\r\n                {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                            <th {...column.getHeaderProps()}>\r\n                                {column.render('Header')}\r\n                                <div>\r\n                                    {column.canFilter ? column.render('Filter') : null}\r\n                                </div>\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n                \r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {rows.map((row, i) => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                            })}\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    )\r\n  }","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\home\\InfoView.js",["111","112","113"],"C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\home\\TableByCity.js",["114","115","116","117"],"import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ResponsiveBar } from \"@nivo/bar\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport default function TableByCity({\r\n  area,\r\n  data,\r\n  summaryData,\r\n  onClickHandler,\r\n}) {\r\n  const [barData, setBarData] = useState([]);\r\n  const [barDataOthers, setBarDataOthers] = useState([]);\r\n  const [showOthers, setShowOthers] = useState(false);\r\n  const [noTransactionsList, setNoTransactionsList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const showOthersButtonHandler = (e) => {\r\n    setShowOthers((state) => !state);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setShowOthers(false);\r\n  }, [area]);\r\n\r\n  useEffect(() => {\r\n    if (area === \"Suomi\") return null;\r\n    let barDataArr = [];\r\n    let noTransactionsListArray = [];\r\n    let othersArray = [];\r\n\r\n    let totalTransactions = 0;\r\n\r\n    try {\r\n      let regiondData = summaryData.filter((e) => e.place == area)[0];\r\n      totalTransactions = regiondData.data.kaikki.tapahtumatYht;\r\n\r\n      totalTransactions = parseInt(totalTransactions.replace(/\\s/g, \"\"));\r\n    } catch (error) {}\r\n\r\n    let objectOthers = {\r\n      place: \"muut\",\r\n      yksiö: 0,\r\n      kaksio: 0,\r\n      kolmio: 0,\r\n      neliö: 0,\r\n    };\r\n\r\n    data.map((d) => {\r\n      if (parseInt(d.data[\"kaikki\"].tapahtumatYht.replace(/\\s/g, \"\")) < 1) {\r\n        noTransactionsListArray.push(d.place);\r\n      } else if (\r\n        parseInt(d.data[\"kaikki\"].tapahtumatYht.replace(/\\s/g, \"\")) >\r\n        0.02 * totalTransactions\r\n      ) {\r\n        barDataArr.push({\r\n          place: d.place,\r\n          yksiö: parseInt(d.data[1].tapahtumatYht.replace(/\\s/g, \"\")),\r\n          kaksio: parseInt(d.data[2].tapahtumatYht.replace(/\\s/g, \"\")),\r\n          kolmio: parseInt(d.data[3].tapahtumatYht.replace(/\\s/g, \"\")),\r\n          neliö: parseInt(d.data[4].tapahtumatYht.replace(/\\s/g, \"\")),\r\n        });\r\n      } else {\r\n        othersArray.push({\r\n          place: d.place,\r\n          yksiö: parseInt(d.data[1].tapahtumatYht.replace(/\\s/g, \"\")),\r\n          kaksio: parseInt(d.data[2].tapahtumatYht.replace(/\\s/g, \"\")),\r\n          kolmio: parseInt(d.data[3].tapahtumatYht.replace(/\\s/g, \"\")),\r\n          neliö: parseInt(d.data[4].tapahtumatYht.replace(/\\s/g, \"\")),\r\n        });\r\n        objectOthers[\"yksiö\"] =\r\n          objectOthers[\"yksiö\"] +\r\n          parseInt(d.data[1].tapahtumatYht.replace(/\\s/g, \"\"));\r\n        objectOthers[\"kaksio\"] =\r\n          objectOthers[\"kaksio\"] +\r\n          parseInt(d.data[2].tapahtumatYht.replace(/\\s/g, \"\"));\r\n        objectOthers[\"kolmio\"] =\r\n          objectOthers[\"kolmio\"] +\r\n          parseInt(d.data[3].tapahtumatYht.replace(/\\s/g, \"\"));\r\n        objectOthers[\"neliö\"] =\r\n          objectOthers[\"neliö\"] +\r\n          parseInt(d.data[4].tapahtumatYht.replace(/\\s/g, \"\"));\r\n      }\r\n    });\r\n\r\n    if (othersArray.length === 1) {\r\n      barDataArr.push(othersArray[0]);\r\n      setBarDataOthers([]);\r\n    } else if (othersArray.length > 1) {\r\n      barDataArr.push(objectOthers);\r\n      setBarDataOthers(othersArray);\r\n    } else {\r\n      setBarDataOthers([]);\r\n    }\r\n\r\n    setBarData(barDataArr);\r\n\r\n    setNoTransactionsList(noTransactionsListArray);\r\n\r\n    setLoading(false);\r\n  }, [area, summaryData, data]);\r\n\r\n  if (area === \"Suomi\") {\r\n    return <div style={{ height: \"500px\" }}>Valitse maakunta</div>;\r\n  }\r\n  if (loading === true) {\r\n    return (\r\n      <div style={{ height: \"500px\" }}>Vain hetki, ladataan lisää tietoa..</div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"500px\" }}>\r\n      {barDataOthers.length > 0 && (\r\n        <div style={{ height: \"50px\", textAlign: \"left\", paddingLeft: \"10%\" }}>\r\n          <Button variant=\"info\" onClick={showOthersButtonHandler}>\r\n            {\" \"}\r\n            {showOthers === false ? \"Näytä muut\" : \"Palaa takaisin\"}{\" \"}\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <div style={{ height: \"350px\" }}>\r\n        <ResponsiveBar\r\n          data={showOthers === false ? barData : barDataOthers}\r\n          keys={[\"yksiö\", \"kaksio\", \"kolmio\", \"neliö\"]}\r\n          indexBy=\"place\"\r\n          onClick={(node) => {\r\n            if (node.indexValue === \"muut\") return null;\r\n            onClickHandler(node);\r\n          }}\r\n          margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n          padding={0.3}\r\n          valueScale={{ type: \"linear\" }}\r\n          indexScale={{ type: \"band\", round: true }}\r\n          colors={{ scheme: \"nivo\" }}\r\n          defs={[\r\n            {\r\n              id: \"dots\",\r\n              type: \"patternDots\",\r\n              background: \"inherit\",\r\n              color: \"#38bcb2\",\r\n              size: 4,\r\n              padding: 1,\r\n              stagger: true,\r\n            },\r\n            {\r\n              id: \"lines\",\r\n              type: \"patternLines\",\r\n              background: \"inherit\",\r\n              color: \"#eed312\",\r\n              rotation: -45,\r\n              lineWidth: 6,\r\n              spacing: 10,\r\n            },\r\n          ]}\r\n          fill={[\r\n            {\r\n              match: {\r\n                id: \"fries\",\r\n              },\r\n              id: \"dots\",\r\n            },\r\n            {\r\n              match: {\r\n                id: \"sandwich\",\r\n              },\r\n              id: \"lines\",\r\n            },\r\n          ]}\r\n          borderColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\r\n          axisTop={null}\r\n          axisRight={null}\r\n          axisBottom={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: \"kaupunki\",\r\n            legendPosition: \"middle\",\r\n            legendOffset: 32,\r\n          }}\r\n          axisLeft={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: \"kpl\",\r\n            legendPosition: \"middle\",\r\n            legendOffset: -40,\r\n          }}\r\n          labelSkipWidth={12}\r\n          labelSkipHeight={12}\r\n          labelTextColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\r\n          legends={[\r\n            {\r\n              dataFrom: \"keys\",\r\n              anchor: \"bottom-right\",\r\n              direction: \"column\",\r\n              justify: false,\r\n              translateX: 120,\r\n              translateY: 0,\r\n              itemsSpacing: 2,\r\n              itemWidth: 100,\r\n              itemHeight: 20,\r\n              itemDirection: \"left-to-right\",\r\n              itemOpacity: 0.85,\r\n              symbolSize: 20,\r\n              effects: [\r\n                {\r\n                  on: \"hover\",\r\n                  style: {\r\n                    itemOpacity: 1,\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          ]}\r\n          animate={true}\r\n          motionStiffness={90}\r\n          motionDamping={15}\r\n        />\r\n      </div>\r\n      {noTransactionsList.length > 0 && (\r\n        <div>\r\n          Kaupungit, joissa ei raportoituja kauppoja:{\" \"}\r\n          {noTransactionsList.map((e, index) => {\r\n            if (index === noTransactionsList.length - 1) {\r\n              return e + \".\";\r\n            } else {\r\n              return e + \", \";\r\n            }\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n{\r\n  /* <div style={{ maxHeight: \"280px\", overflowY: \"scroll\" }}>\r\n      {data.map((e) => (\r\n        <div onClick={onClickHandler} key={e.place}>\r\n          <Link to={`kaupunki/${e.place}`}> {e.place}: </Link> {e.data.length}\r\n        </div>\r\n      ))}\r\n    </div> */\r\n}\r\n","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\home\\TableByCitySide.js",["118","119","120","121","122","123","124","125","126","127","128","129","130"],"import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ResponsiveBar } from \"@nivo/bar\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport default function TableByCitySide({\r\n  area,\r\n  data,\r\n  summaryData,\r\n  onClickHandler,\r\n}) {\r\n  const [barData, setBarData] = useState([]);\r\n  const [barDataOthers, setBarDataOthers] = useState([]);\r\n  const [showOthers, setShowOthers] = useState(false);\r\n  const [noTransactionsList, setNoTransactionsList] = useState([]);\r\n\r\n  const showOthersButtonHandler = (e) => {\r\n    setShowOthers((state) => !state);\r\n  };\r\n\r\n  useEffect(() => {}, [area, summaryData, data]);\r\n\r\n  let dataObj = {};\r\n  let itemsArr = [];\r\n\r\n  try {\r\n    dataObj = data.filter((e) => e.place === area)[0].data.kaikki;\r\n\r\n    Object.keys(dataObj).map((key) => {\r\n      if (dataObj[key].avg !== undefined) {\r\n        itemsArr.push(key + \": \" + dataObj[key].avg);\r\n      } else {\r\n        itemsArr.push(key + \": \" + dataObj[key]);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <h6 style={{ paddingTop: \"15px\" }}>kaupungin keskiarvot:</h6>\r\n      {itemsArr.map((e, i) => (\r\n        <p key={\"TableCitySide-\" + i}>{e}</p>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n{\r\n  /* <div style={{ maxHeight: \"280px\", overflowY: \"scroll\" }}>\r\n      {data.map((e) => (\r\n        <div onClick={onClickHandler} key={e.place}>\r\n          <Link to={`kaupunki/${e.place}`}> {e.place}: </Link> {e.data.length}\r\n        </div>\r\n      ))}\r\n    </div> */\r\n}\r\n","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\home\\RegionHistoryGraph.js",["131","132","133","134","135"],"C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\setUp\\PXWeb\\getData.js",["136","137"],"C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\setUp\\PXWeb\\parseResponse.js",["138","139","140","141","142","143"],"export default async function parseResponse(data) {\r\n  //let data = await pxwebAPI(params);\r\n\r\n  if (data === null) return null;\r\n  let dimension = null;\r\n  let values = null;\r\n\r\n  try {\r\n    dimension = data.dataset.dimension;\r\n    values = data.dataset.value;\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n\r\n  let zipsObj = dimension.Postinumero.category.index;\r\n  let ids = dimension.id;\r\n\r\n  let sizeArray = dimension.size;\r\n\r\n  let itemCombs = sizeArray.reduce(function (a, b) {\r\n    return a * b;\r\n  }, 1);\r\n\r\n  let count = 0;\r\n  let i = 0;\r\n\r\n  const createObject = (\r\n    obj,\r\n    type,\r\n    structure,\r\n    objectsList,\r\n    pos,\r\n    values,\r\n    count\r\n  ) => {\r\n    let objElement = {};\r\n\r\n    while (pos < Object.keys(structure).length) {\r\n      let labels = objectsList[structure[pos]].category.label;\r\n      let labelIndeces = objectsList[structure[pos]].category.index;\r\n\r\n      let labelsArr = [];\r\n      for (const index in labelIndeces) {\r\n        labelsArr.push([labelIndeces[index], labels[index]]);\r\n      }\r\n      labelsArr.sort(function (a, b) {\r\n        return a[0] - b[0];\r\n      });\r\n      for (const item in labelsArr) {\r\n        objElement[labelsArr[item][1]] = \"\";\r\n      }\r\n\r\n      if (Object.keys(obj).length === 0) {\r\n        obj = objElement;\r\n      } else {\r\n        for (const key in obj) {\r\n          obj[key] = objElement;\r\n        }\r\n      }\r\n\r\n      pos = pos + 1;\r\n\r\n      if (pos === Object.keys(structure).length) {\r\n        for (const element in objElement) {\r\n          count = count + 1;\r\n        }\r\n      }\r\n\r\n      return createObject(\r\n        objElement,\r\n        type,\r\n        structure,\r\n        objectsList,\r\n        pos,\r\n        values,\r\n        count\r\n      );\r\n    }\r\n  };\r\n  let dataObject = { data: \"\" };\r\n  createObject(dataObject, \"item\", ids, dimension, 0, values, 0);\r\n\r\n  dataObject = dataObject.data;\r\n\r\n  const createTotalObject = (obj, structure) => {\r\n    let objKeys = Object.keys(structure);\r\n\r\n    for (const key in objKeys) {\r\n      if (Object.keys(structure[objKeys[key]]).length === 0) {\r\n        Object.defineProperty(obj, objKeys[key], {\r\n          value: [],\r\n          writable: true,\r\n          enumerable: true,\r\n        });\r\n        Object.defineProperty(obj, objKeys[key] + \"_count\", {\r\n          value: [],\r\n          writable: true,\r\n          enumerable: true,\r\n        });\r\n        Object.defineProperty(obj, objKeys[key] + \"_zip\", {\r\n          value: [],\r\n          writable: true,\r\n          enumerable: true,\r\n        });\r\n      } else {\r\n        Object.defineProperty(obj, objKeys[key], {\r\n          value: {},\r\n          writable: true,\r\n          enumerable: true,\r\n        });\r\n      }\r\n\r\n      createTotalObject(obj[objKeys[key]], structure[objKeys[key]]);\r\n    }\r\n  };\r\n\r\n  let totalObject = { data: {} };\r\n  if (dataObject[Object.keys(dataObject)[0]] !== undefined) {\r\n    createTotalObject(totalObject.data, dataObject[Object.keys(dataObject)[0]]);\r\n  }\r\n\r\n  let resArr = [];\r\n\r\n  const loopValues = (\r\n    obj,\r\n    totalObject,\r\n    resObject,\r\n    values,\r\n    sizeArray,\r\n    round,\r\n    objectRound,\r\n    testArr\r\n  ) => {\r\n    let sizes = [...sizeArray];\r\n    objectRound = objectRound + 1;\r\n    sizes.shift();\r\n\r\n    let itemCombs = sizes.reduce(function (a, b) {\r\n      return a * b;\r\n    }, 1);\r\n\r\n    let objKeys = Object.keys(obj);\r\n\r\n    let loopCount = 0;\r\n    let newRound = 0;\r\n    for (const key in objKeys) {\r\n      Object.defineProperty(resObject, objKeys[key], {\r\n        value: {},\r\n        writable: true,\r\n        enumerable: true,\r\n      });\r\n      newRound = round + loopCount * itemCombs;\r\n\r\n      //When value is empty string we are are the end of the object tree. -> save value to the variable\r\n      if (obj[objKeys[key]] === \"\") {\r\n        let treeCount = 0;\r\n\r\n        for (const item in obj) {\r\n          testArr.push(values[newRound + treeCount]);\r\n          try {\r\n            if (true) {\r\n              if (values[newRound + treeCount] === null) {\r\n                Object.defineProperty(resObject, item, {\r\n                  value: \"NULL\",\r\n                  writable: true,\r\n                  enumerable: true,\r\n                });\r\n              } else {\r\n                Object.defineProperty(resObject, item, {\r\n                  value: values[newRound + treeCount],\r\n                  writable: true,\r\n                  enumerable: true,\r\n                });\r\n\r\n                totalObject[item].push(values[newRound + treeCount]);\r\n                if (item === \"Neliöhinta (EUR/m2)\") {\r\n                  totalObject[item + \"_count\"].push(\r\n                    values[newRound + treeCount + 1]\r\n                  );\r\n                }\r\n              }\r\n            }\r\n          } catch (error) {}\r\n\r\n          treeCount = treeCount + 1;\r\n        }\r\n        break;\r\n      }\r\n\r\n      let totalObjectToSend;\r\n\r\n      if (objectRound === 1) {\r\n        totalObjectToSend = totalObject.data;\r\n      } else if (objectRound > 1) {\r\n        totalObjectToSend = totalObject[objKeys[key]];\r\n      }\r\n\r\n      loopValues(\r\n        obj[objKeys[key]],\r\n        totalObjectToSend,\r\n        resObject[objKeys[key]],\r\n        values,\r\n        sizes,\r\n        newRound,\r\n        objectRound,\r\n        testArr\r\n      );\r\n      loopCount++;\r\n    }\r\n    //return resObject;\r\n  };\r\n\r\n  let testArr = [];\r\n  let sizeArrayCombs = [...sizeArray];\r\n\r\n  let newObject = { data: {} };\r\n\r\n  resArr = loopValues(\r\n    dataObject,\r\n    totalObject,\r\n    newObject.data,\r\n    values,\r\n    sizeArrayCombs,\r\n    0,\r\n    0,\r\n    testArr\r\n  );\r\n\r\n  newObject.data[\"total\"] = totalObject;\r\n\r\n  //calculate averages for regions\r\n\r\n  newObject.data.total = newObject.data.total.data;\r\n\r\n  let keysLayer1 = []; //Object.keys(newObject.data.total);\r\n\r\n  Object.getOwnPropertyNames(newObject.data.total).forEach((key) => {\r\n    keysLayer1.push(key);\r\n  });\r\n  for (const layer1 in keysLayer1) {\r\n    let keysLayer2 = []; // Object.keys(newObject.data.total[keysLayer1[layer1]]);\r\n    Object.getOwnPropertyNames(\r\n      newObject.data.total[keysLayer1[layer1]]\r\n    ).forEach((key) => {\r\n      keysLayer2.push(key);\r\n    });\r\n\r\n    for (const layer2 in keysLayer2) {\r\n      let keysLayer3 = []; // Object.keys(newObject.data.total[keysLayer1[layer1]]);\r\n      Object.getOwnPropertyNames(\r\n        newObject.data.total[keysLayer1[layer1]][keysLayer2[layer2]]\r\n      ).forEach((key) => {\r\n        keysLayer3.push(key);\r\n      });\r\n\r\n      for (const layer3 in keysLayer3) {\r\n        let countArray =\r\n          newObject.data.total[keysLayer1[layer1]][keysLayer2[layer2]][\r\n            keysLayer3[layer3]\r\n          ][\"Neliöhinta (EUR/m2)_count\"];\r\n        let countSum = countArray.reduce(function (a, b) {\r\n          return a + b;\r\n        }, 0);\r\n\r\n        let priceArray =\r\n          newObject.data.total[keysLayer1[layer1]][keysLayer2[layer2]][\r\n            keysLayer3[layer3]\r\n          ][\"Neliöhinta (EUR/m2)\"];\r\n        let avgPrice = 0;\r\n        for (const item in priceArray) {\r\n          avgPrice =\r\n            avgPrice + (priceArray[item] * countArray[item]) / countSum;\r\n        }\r\n\r\n        newObject.data.total[keysLayer1[layer1]][keysLayer2[layer2]][\r\n          keysLayer3[layer3]\r\n        ][\"avg_Neliöhinta (EUR/m2)\"] = avgPrice;\r\n\r\n        let countTotalArray =\r\n          newObject.data.total[keysLayer1[layer1]][keysLayer2[layer2]][\r\n            keysLayer3[layer3]\r\n          ][\"Kauppojen lukumäärä\"];\r\n        let countTotalSum = countTotalArray.reduce(function (a, b) {\r\n          return a + b;\r\n        }, 0);\r\n\r\n        newObject.data.total[keysLayer1[layer1]][keysLayer2[layer2]][\r\n          keysLayer3[layer3]\r\n        ][\"total_Kauppojen lukumäärä\"] = countTotalSum;\r\n      }\r\n    }\r\n  }\r\n  return newObject;\r\n}\r\n","C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\setUp\\PXWeb\\api\\api.js",["144","145"],"C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\setUp\\PXWeb\\api\\apiGET.js",[],"C:\\Users\\juwew\\OneDrive\\Asiakirjat\\Coding\\kauppahinnat\\project\\kauppahinnat.fi\\src\\components\\graphs\\nivo\\Line.js",["146"],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":84,"column":6,"nodeType":"153","endLine":84,"endColumn":8,"suggestions":"154"},{"ruleId":"151","severity":1,"message":"155","line":106,"column":6,"nodeType":"153","endLine":106,"endColumn":8,"suggestions":"156"},{"ruleId":"151","severity":1,"message":"155","line":25,"column":6,"nodeType":"153","endLine":25,"endColumn":8,"suggestions":"157"},{"ruleId":"151","severity":1,"message":"158","line":122,"column":6,"nodeType":"153","endLine":122,"endColumn":8,"suggestions":"159"},{"ruleId":"151","severity":1,"message":"155","line":135,"column":6,"nodeType":"153","endLine":135,"endColumn":8,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":12,"column":10,"nodeType":"163","messageId":"164","endLine":12,"endColumn":27},{"ruleId":"161","severity":1,"message":"165","line":12,"column":29,"nodeType":"163","messageId":"164","endLine":12,"endColumn":49},{"ruleId":"151","severity":1,"message":"166","line":80,"column":6,"nodeType":"153","endLine":80,"endColumn":16,"suggestions":"167"},{"ruleId":"151","severity":1,"message":"168","line":115,"column":6,"nodeType":"153","endLine":115,"endColumn":24,"suggestions":"169"},{"ruleId":"161","severity":1,"message":"170","line":155,"column":9,"nodeType":"163","messageId":"164","endLine":155,"endColumn":19},{"ruleId":"161","severity":1,"message":"171","line":2,"column":8,"nodeType":"163","messageId":"164","endLine":2,"endColumn":11},{"ruleId":"161","severity":1,"message":"172","line":3,"column":8,"nodeType":"163","messageId":"164","endLine":3,"endColumn":19},{"ruleId":"151","severity":1,"message":"173","line":42,"column":6,"nodeType":"153","endLine":42,"endColumn":19,"suggestions":"174"},{"ruleId":"151","severity":1,"message":"175","line":174,"column":8,"nodeType":"153","endLine":174,"endColumn":20,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":17,"column":42,"nodeType":"179","messageId":"180","endLine":17,"endColumn":51},{"ruleId":"177","severity":1,"message":"178","line":25,"column":34,"nodeType":"179","messageId":"180","endLine":25,"endColumn":43},{"ruleId":"151","severity":1,"message":"181","line":31,"column":6,"nodeType":"153","endLine":31,"endColumn":12,"suggestions":"182"},{"ruleId":"161","severity":1,"message":"183","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":14},{"ruleId":"184","severity":1,"message":"185","line":35,"column":59,"nodeType":"186","messageId":"187","endLine":35,"endColumn":61},{"ruleId":"177","severity":1,"message":"188","line":49,"column":18,"nodeType":"189","messageId":"180","endLine":49,"endColumn":20},{"ruleId":"190","severity":1,"message":"191","line":237,"column":1,"nodeType":"192","messageId":"193","endLine":245,"endColumn":2},{"ruleId":"161","severity":1,"message":"183","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":14},{"ruleId":"161","severity":1,"message":"194","line":3,"column":10,"nodeType":"163","messageId":"164","endLine":3,"endColumn":23},{"ruleId":"161","severity":1,"message":"195","line":4,"column":8,"nodeType":"163","messageId":"164","endLine":4,"endColumn":14},{"ruleId":"161","severity":1,"message":"196","line":12,"column":10,"nodeType":"163","messageId":"164","endLine":12,"endColumn":17},{"ruleId":"161","severity":1,"message":"197","line":12,"column":19,"nodeType":"163","messageId":"164","endLine":12,"endColumn":29},{"ruleId":"161","severity":1,"message":"198","line":13,"column":10,"nodeType":"163","messageId":"164","endLine":13,"endColumn":23},{"ruleId":"161","severity":1,"message":"199","line":13,"column":25,"nodeType":"163","messageId":"164","endLine":13,"endColumn":41},{"ruleId":"161","severity":1,"message":"200","line":14,"column":10,"nodeType":"163","messageId":"164","endLine":14,"endColumn":20},{"ruleId":"161","severity":1,"message":"201","line":15,"column":10,"nodeType":"163","messageId":"164","endLine":15,"endColumn":28},{"ruleId":"161","severity":1,"message":"202","line":15,"column":30,"nodeType":"163","messageId":"164","endLine":15,"endColumn":51},{"ruleId":"161","severity":1,"message":"203","line":17,"column":9,"nodeType":"163","messageId":"164","endLine":17,"endColumn":32},{"ruleId":"177","severity":1,"message":"188","line":29,"column":36,"nodeType":"189","messageId":"180","endLine":29,"endColumn":38},{"ruleId":"190","severity":1,"message":"191","line":50,"column":1,"nodeType":"192","messageId":"193","endLine":58,"endColumn":2},{"ruleId":"161","severity":1,"message":"204","line":16,"column":10,"nodeType":"163","messageId":"164","endLine":16,"endColumn":27},{"ruleId":"161","severity":1,"message":"205","line":16,"column":29,"nodeType":"163","messageId":"164","endLine":16,"endColumn":48},{"ruleId":"151","severity":1,"message":"206","line":81,"column":6,"nodeType":"153","endLine":81,"endColumn":8,"suggestions":"207"},{"ruleId":"161","severity":1,"message":"208","line":117,"column":9,"nodeType":"163","messageId":"164","endLine":117,"endColumn":22},{"ruleId":"209","severity":1,"message":"210","line":246,"column":13,"nodeType":"211","messageId":"212","endLine":253,"endColumn":15},{"ruleId":"161","severity":1,"message":"213","line":84,"column":5,"nodeType":"163","messageId":"164","endLine":84,"endColumn":15},{"ruleId":"184","severity":1,"message":"185","line":123,"column":18,"nodeType":"186","messageId":"187","endLine":123,"endColumn":20},{"ruleId":"161","severity":1,"message":"214","line":15,"column":7,"nodeType":"163","messageId":"164","endLine":15,"endColumn":14},{"ruleId":"161","severity":1,"message":"215","line":20,"column":7,"nodeType":"163","messageId":"164","endLine":20,"endColumn":16},{"ruleId":"161","severity":1,"message":"216","line":24,"column":7,"nodeType":"163","messageId":"164","endLine":24,"endColumn":12},{"ruleId":"161","severity":1,"message":"217","line":25,"column":7,"nodeType":"163","messageId":"164","endLine":25,"endColumn":8},{"ruleId":"161","severity":1,"message":"218","line":64,"column":20,"nodeType":"163","messageId":"164","endLine":64,"endColumn":27},{"ruleId":"161","severity":1,"message":"219","line":218,"column":3,"nodeType":"163","messageId":"164","endLine":218,"endColumn":9},{"ruleId":"209","severity":1,"message":"210","line":91,"column":5,"nodeType":"220","messageId":"212","endLine":91,"endColumn":46},{"ruleId":"161","severity":1,"message":"221","line":98,"column":16,"nodeType":"163","messageId":"164","endLine":98,"endColumn":24},{"ruleId":"209","severity":1,"message":"210","line":62,"column":13,"nodeType":"211","messageId":"212","endLine":69,"endColumn":15},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'zip'. Either include it or remove the dependency array.","ArrayExpression",["224"],"React Hook useEffect has a missing dependency: 'Sales'. Either include it or remove the dependency array.",["225"],["226"],"React Hook useEffect has a missing dependency: 'city'. Either include it or remove the dependency array.",["227"],["228"],"no-unused-vars","'summaryDataByCity' is assigned a value but never used.","Identifier","unusedVar","'setsummaryDataByCity' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'summaryData'. Either include it or remove the dependency array. You can also do a functional update 'setsummaryData(s => ...)' if you only need 'summaryData' in the 'setsummaryData' call.",["229"],"React Hook useEffect has a missing dependency: 'initLoad'. Either include it or remove the dependency array.",["230"],"'matchesRes' is assigned a value but never used.","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","React Hook useEffect has missing dependencies: 'setSearchResults' and 'setSearching'. Either include them or remove the dependency array. If 'setSearching' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["231"],"React Hook useEffect has a missing dependency: 'props.sales'. Either include it or remove the dependency array.",["232"],"array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["233"],"'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'ResponsiveBar' is defined but never used.","'Button' is defined but never used.","'barData' is assigned a value but never used.","'setBarData' is assigned a value but never used.","'barDataOthers' is assigned a value but never used.","'setBarDataOthers' is assigned a value but never used.","'showOthers' is assigned a value but never used.","'noTransactionsList' is assigned a value but never used.","'setNoTransactionsList' is assigned a value but never used.","'showOthersButtonHandler' is assigned a value but never used.","'regiondDataHidden' is assigned a value but never used.","'setRegionDataHidden' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'provinces'. Either include it or remove the dependency array.",["234"],"'legendOnClick' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'limitCount' is assigned a value but never used.","'zipsObj' is assigned a value but never used.","'itemCombs' is assigned a value but never used.","'count' is assigned a value but never used.","'i' is assigned a value but never used.","'element' is assigned a value but never used.","'resArr' is assigned a value but never used.","IfStatement","'postData' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"237","fix":"239"},{"desc":"240","fix":"241"},{"desc":"237","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},"Update the dependencies array to be: [zip]",{"range":"255","text":"256"},"Update the dependencies array to be: [Sales]",{"range":"257","text":"258"},{"range":"259","text":"258"},"Update the dependencies array to be: [city]",{"range":"260","text":"261"},{"range":"262","text":"258"},"Update the dependencies array to be: [initLoad, summaryData]",{"range":"263","text":"264"},"Update the dependencies array to be: [initLoad, regionInfoActive]",{"range":"265","text":"266"},"Update the dependencies array to be: [searchValue, setSearchResults, setSearching]",{"range":"267","text":"268"},"Update the dependencies array to be: [props.room, props.sales]",{"range":"269","text":"270"},"Update the dependencies array to be: [area, data]",{"range":"271","text":"272"},"Update the dependencies array to be: [provinces]",{"range":"273","text":"274"},[2275,2277],"[zip]",[2796,2798],"[Sales]",[784,786],[3395,3397],"[city]",[3771,3773],[2421,2431],"[initLoad, summaryData]",[3328,3346],"[initLoad, regionInfoActive]",[1092,1105],"[searchValue, setSearchResults, setSearching]",[5284,5296],"[props.room, props.sales]",[794,800],"[area, data]",[2641,2643],"[provinces]"]